---
# tasks file for do-create-server-group
- set_fact: do_token="{{ lookup('env','DO_API_TOKEN') }}"

- set_fact: drop_name={{ droplet.group }}-{{ current + 1 }}

- name: debug create instance
  debug: msg="Creating instance {{ current + 1 }} of group {{ droplet.group }}"

- name: ensure ssh key exists
  command: ssh-keygen -q -t rsa -f {{ ssh_file }} -C "" -N ""
  args:
    creates: ~/.ssh/id_do

- name: ensure key exists at DigitalOcean
  digital_ocean: >
    state=present
    command=ssh
    name=my_ssh_key
    ssh_pub_key={{ lookup('file', '{{ ssh_file }}.pub') }}
    api_token={{ do_token }}
  register: my_ssh_key

- name: create droplet
  digital_ocean: >
    state=present
    command=droplet
    name={{ drop_name }}
    unique_name=yes
    size_id={{ drop_size }}
    region_id={{ drop_region }}
    image_id=ubuntu-{{ drop_version }}
    ssh_key_ids={{ my_ssh_key.ssh_key.id }}
    api_token={{ do_token }}
  register: droplet_details

- name: create in inventory in memory
  add_host:
    name: "{{ droplet_details.droplet.name }}"
    groups: 
      - "created_servers"
      - "{{ droplet.group }}"
    ansible_ssh_host: "{{ droplet_details.droplet.ip_address }}"
    ansible_ssh_user: root
  changed_when: false
  tags: create_droplet

- name: create inventory file if it doesn't exist example
  file:
    path: "{{ new_host_file }}"
    state: touch

- name: check if droplets inventory group exists in inventory file
  shell: grep -x \[{{ droplet.group }}\] {{ new_host_file }}
  register: inventory_group
  tags: inventory_file
  failed_when: inventory_group.rc == 2
  changed_when: inventory_group.rc == 0

- name: Add inventory group to inventory file
  become: no
  lineinfile:
    dest: "{{ new_host_file }}"
    line: "[{{ droplet.group }}]"
    state: present
  tags: inventory_file

- name: Add droplet to inventory file
  become: no
  lineinfile:
    dest: "{{ new_host_file }}"
    regexp: "{{ droplet_details.droplet.ip_address }}"
    insertafter: ^\[{{ droplet.group }}\]
    state: present
    line: "{{ droplet_details.droplet.ip_address }} do_name={{ drop_name }} ansible_host={{ droplet_details.droplet.ip_address }}"
  delegate_to: localhost
  tags: inventory_file
